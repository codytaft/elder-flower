// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    currentUser={null}
    history={
        Object {
            "action": "PUSH",
            "length": 50,
            "location": Object {
              "hash": "",
              "key": "ur39zc",
              "pathname": "/",
              "search": "",
            },
            "replace": [Function],
          }
    }
    setCurrentUser={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="main-header-title"
>
          Welcome to Elder Flower 
</h1>,
        <Link
          className="nav-link-logout-hidden"
          exact={true}
          onClick={[Function]}
          replace={false}
          to="/"
>
          Logout
</Link>,
      ],
      "className": "main-header-section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Welcome to Elder Flower ",
          "className": "main-header-title",
        },
        "ref": null,
        "rendered": "Welcome to Elder Flower ",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Logout",
          "className": "nav-link-logout-hidden",
          "exact": true,
          "onClick": [Function],
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": "Logout",
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="main-header-title"
>
            Welcome to Elder Flower 
</h1>,
          <Link
            className="nav-link-logout-hidden"
            exact={true}
            onClick={[Function]}
            replace={false}
            to="/"
>
            Logout
</Link>,
        ],
        "className": "main-header-section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome to Elder Flower ",
            "className": "main-header-title",
          },
          "ref": null,
          "rendered": "Welcome to Elder Flower ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Logout",
            "className": "nav-link-logout-hidden",
            "exact": true,
            "onClick": [Function],
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": "Logout",
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Header should match the snapshot when currentUser exists 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    currentUser={
        Object {
            "contactName": "Gaynell",
            "contactPhone": "+17203304593",
            "email": "cody.taft@gmail.com",
            "firstName": "Cody",
            "id": 75,
            "isElder": false,
            "lastName": "Taft",
            "password": "123",
            "phoneNumber": "+19038511575",
          }
    }
    history={
        Object {
            "action": "PUSH",
            "length": 50,
            "location": Object {
              "hash": "",
              "key": "ur39zc",
              "pathname": "/",
              "search": "",
            },
            "replace": [Function],
          }
    }
    setCurrentUser={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="main-header-title"
>
          Hello 
</h1>,
        <Link
          className="nav-link-logout"
          exact={true}
          onClick={[Function]}
          replace={false}
          to="/"
>
          Logout
</Link>,
      ],
      "className": "main-header-section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Hello ",
            undefined,
          ],
          "className": "main-header-title",
        },
        "ref": null,
        "rendered": Array [
          "Hello ",
          undefined,
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Logout",
          "className": "nav-link-logout",
          "exact": true,
          "onClick": [Function],
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": "Logout",
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="main-header-title"
>
            Hello 
</h1>,
          <Link
            className="nav-link-logout"
            exact={true}
            onClick={[Function]}
            replace={false}
            to="/"
>
            Logout
</Link>,
        ],
        "className": "main-header-section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Hello ",
              undefined,
            ],
            "className": "main-header-title",
          },
          "ref": null,
          "rendered": Array [
            "Hello ",
            undefined,
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Logout",
            "className": "nav-link-logout",
            "exact": true,
            "onClick": [Function],
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": "Logout",
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
